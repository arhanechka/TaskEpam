SQL requests
1. Написать запрос, считающий суммарное количество имеющихся на сайте новостей и обзоров.

SELECT sum(num) as SUM
FROM 
(SELECT count(*) AS num
FROM news
UNION (SELECT count(*) AS num
FROM reviews)) AS s

2. Написать запрос, показывающий список категорий новостей и количество новостей в каждой категории.

SELECT nc_name, count(n_id) 
FROM ann.news_categories 
LEFT JOIN ann.news ON n_category=nc_id
GROUP BY nc_name

3. Написать запрос, показывающий список категорий обзоров и количество обзоров в каждой категории.

SELECT rc_name, count(r_id) FROM ann.reviews_categories
LEFT JOIN ann.reviews ON r_category=rc_id
GROUP BY rc_name

4. Написать запрос, показывающий список категорий новостей, категорий обзоров и дату самой свежей публикации в каждой категории.

SELECT rc_name AS category_name , max(r_dt)AS last_date
FROM reviews_categories, reviews 
WHERE r_id = r_category
UNION SELECT nc_name AS category_name, max(n_dt) AS last_date 
FROM news_categories, news 
WHERE nc_id = n_category
GROUP BY category_name

ИЛИ
SELECT rc_name AS category_name, max(r_dt) AS last_date
FROM reviews_categories
JOIN reviews ON r_id = r_category
UNION SELECT nc_name AS category_name, max(n_dt) AS last_date
FROM news_categories
JOIN news ON nc_id = n_category
GROUP BY category_name;

5. Написать запрос, показывающий список страниц сайта верхнего уровня (у таких страниц нет родительской страницы) и список баннеров для каждой такой страницы.

SELECT distinct p_name FROM pages
WHERE p_id IN (SELECT p_id FROM m2m_banners_pages)

ИЛИ
SELECT p.p_name, b.b_id, b.b_url FROM pages AS p
JOIN m2m_banners_pages AS m2mbp ON p.p_id=m2mbp.p_id
JOIN banners AS b ON m2mbp.b_id=b.b_id
WHERE p_parent is null

6. Написать запрос, показывающий список страниц сайта, на которых есть баннеры.

SELECT distINct p.p_name FROM pages AS p
JOIN m2m_banners_pages AS m2mbp ON p.p_id=m2mbp.p_id
JOIN banners AS b ON m2mbp.b_id=b.b_id
WHERE b.b_url is not null

7. Написать запрос, показывающий список страниц сайта, на которых нет баннеров.

SELECT distINct p_name FROM pages
WHERE p_id not IN 
   (SELECT p_id FROM m2m_banners_pages)

8. Написать запрос, показывающий список баннеров, размещённых хотя бы на одной странице сайта.

SELECT b_id, b_url 
FROM banners
WHERE b_id IN 
   (SELECT b_id FROM m2m_banners_pages)

9. Написать запрос, показывающий список баннеров, не размещённых ни на одной странице сайта.

SELECT b_id, b_url 
FROM banners
WHERE b_id not IN 
   (SELECT b_id FROM m2m_banners_pages)

10. Написать запрос, показывающий баннеры, для которых отношение кликов к показам >= 80% (при условии, что баннер был показан хотя бы один раз).

SELECT b_id, b_url, b_click/b_show*100 AS b_rate FROM banners 
WHERE b_show<>0 AND b_click/b_show*100>80

11. Написать запрос, показывающий список страниц сайта, на которых показаны баннеры с текстом (в поле `b_text` не NULL).

SELECT distINct p_name
FROM pages
JOIN m2m_banners_pages ON pages.p_id=m2m_banners_pages.p_id
JOIN banners ON m2m_banners_pages.b_id=banners.b_id 
   AND b_text is not null

12. Написать запрос, показывающий список страниц сайта, на которых показаны баннеры с картинкой (в поле `b_pic` не NULL).

SELECT distinct p_name
FROM pages
JOIN m2m_banners_pages ON pages.p_id=m2m_banners_pages.p_id
JOIN banners ON m2m_banners_pages.b_id=banners.b_id AND b_pic is not null

13. Написать запрос, показывающий список публикаций (новостей и обзоров) за 2011-й год.

SELECT r_header AS header, r_dt AS date
FROM reviews
WHERE r_dt BETWEEN "2011-01.01"  AND  "2011.12.31"
UNION (SELECT n_header, n_dt
FROM news
WHERE n_dt BETWEEN "2011-01.01"  AND  "2011.12.31")

14. Написать запрос, показывающий список категорий публикаций (новостей и обзоров), в которых нет публикаций.

SELECT rc_name AS category
FROM reviews_categories
WHERE rc_id NOT IN (SELECT r_category FROM reviews)
UNION SELECT nc_name
FROM news_categories
WHERE nc_id NOT IN (SELECT n_category FROM news)

15. Написать запрос, показывающий список новостей из категории «Логистика» за 2012-й год.

SELECT n_header, n_dt
FROM news
JOIN news_categories ON n_category=nc_id 
	AND nc_name = 'Логистика'
WHERE n_dt BETWEEN "2012-01.01"  AND  "2012.12.31"



